#
# ZSH startup script
#

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

export DEFAULT_USER=tony
ZSH_THEME="robbyrussell"
#ZSH_THEME="agnoster"
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

setopt append_history
setopt no_inc_append_history
setopt no_share_history

setopt extended_glob # treat #, ~, and ^ as part of patterns for filename generation
setopt auto_cd # If you type foo, and it isn't a command, and it is a directory in your cdpath, go there
setopt cdablevarS # if argument to cd is the name of a parameter whose value is a valid directory, it will become the current directory
setopt pushd_ignore_dups # don't push multiple copies of the same directory onto the directory stack

export GOROOT=/usr/local/go
export TEXLIVE=/usr/local/texlive/2017
export NPM_PACKAGES=${HOME}/.npm-packages
export GOPATH=$HOME/Development/Workspaces/go
export PGHOME=/usr/local/pgsql
export QTHOME=/usr/local/Qt
#export DOCKER_HOST=tcp://localhost:2375

pathadd ${HOME}/bin before
pathadd ${HOME}/.emacs.d/bin 
pathadd ${HOME}/.local/bin
pathadd ${PGHOME}/bin
pathadd ${QTHOME}/bin
pathadd ${TEXLIVE}/bin/x86_64-linux
pathadd ${GOROOT}/bin
pathadd ${NPM_PACKAGES}/bin after

# Turn on vi mode
bindkey -v

autoload -U compinit && compinit
zmodload -i zsh/complist
setopt always_to_end # When completing from the middle of a word, move the cursor to the end of the word
setopt auto_menu # show completion menu on successive tab press. needs unsetop menu_complete to work
setopt auto_name_dirs # any parameter that is set to the absolute name of a directory immediately becomes a name for that directory
setopt complete_in_word # Allow completion from within a word/phrase
unsetopt menu_complete # do not autoselect the first completion entry

export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export GREP_COLOR='1;32'
export MANPAGER="less -X" # Donâ€™t clear the screen after quitting a manual page
export EDITOR=vim
export GOOGLE_CLOUD_KEYFILE_JSON=/home/tony/.gcp/development-223218-a2ab9f6513ed.json

alias vi=vim
alias r="source ~/.zshrc"
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"
alias mkc='minikube kubectl -- '
alias kc=kubectl
alias h=history
alias hg='history | grep'

function hc() {
    history | grep "^[[:space:]]*[0-9]*[[:space:]]*$@"
}

# Enable AWS completer
#source ${HOME}/.local/bin/aws_zsh_completer.sh

# Tmux
# Makes creating a new tmux session (with a specific name) easier
function tmuxopen() {
  tmux attach -t $1
}

# Makes creating a new tmux session (with a specific name) easier
function tmuxnew() {
  tmux new -s $1
}

# Makes deleting a tmux session easier
function tmuxkill() {
  tmux kill-session -t $1
}


ulimit -c unlimited


if [[ "$OSTYPE" = darwin* ]]; then
    # Override oh-my-zsh's use of gls if it is available (see .oh-my-zsh/lib/theme-and-appearance.zsh)
    alias ls='ls -G'
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
else
#    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/tony/Tools/google-cloud-sdk/path.zsh.inc' ]; then . '/home/tony/Tools/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/tony/Tools/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/tony/Tools/google-cloud-sdk/completion.zsh.inc'; fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/tony/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/tony/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/tony/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/tony/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

